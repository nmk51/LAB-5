/*

 * GccApplication2.cpp

 *

 * Created: 2/10/2020 4:18:30 PM

 * Author : nmk51

 */ 



#include <avr/io.h>

char sensorval = 0; //dropping last two bits so can be char


int main(void)

{

   DDRC = 0x00;
   PORTB = 0x00;
   DDRB = 1 << PORTB1 | 1<< PORTB2;
   DDRD = 0xff;
  // DDRD = 1 << PD6 | 1<< PD5;
   PORTD = 0xFF;
   OCR0A = 0x00; //sets duty cycle to zero
   TCCR0A = 1 << COM0A1 | 1<< COM0A0 | 1<< WGM01 | 1<< WGM00;
   TCCR0B = 0<< CS02 | 1<< CS01 | 1<< CS00;
   PRR = 0x00; //clears power reduction

   //PORTC = 0xFF; //Clears all bits 

   ADCSRA = 0b10000111; //enables ADC and sets freq to 128

   ADMUX = 0b01100101; //Sets reff volt, sets to left justified, connects to ADC5(PC5)
   // ADCSRA = 1 << ADEN | 1 << ADPS2 | 1 << ADPS1 | 1 << ADPS0;
 

    while (1)

    {

		ADCSRA |= (1<<ADSC); //Turns bit 6 on to start conversion

		while ((ADCSRA & (1<<ADIF))==0){ //Checks bit 4 to see if flag is up(finished reading)

		       sensorval = ADCH; //Reads the sensor val
               
			  

		if(sensorval >= 0 && sensorval < 51){

		//Turn on lowest light
        //-100% duty cycle 
	        PORTD = 0b11111110;
			PORTC = 1<< PC3 | 1<< PC2;
		    OCR0A = 0xFF;

		}

		if(sensorval >= 51 && sensorval < 102){

		//Turn on low light
        //-50% duty cycle
	        PORTD = 0b11111101; 
            OCR0A = 0x7F;
		}

		if(sensorval >= 102 && sensorval < 153){

		//Neutral Light
        //motor off
		   PORTD = 0b11111011;
           OCR0A = 0x00;
		}

		if(sensorval >= 153 && sensorval < 204){

		//Turn on medium light
        //+50% duty cycle
		PORTD = 0b11110111;
		OCR0A = 0x7F;
		

		}

		

		if(sensorval >= 204){

		//Turn on high light
        //+100 duty cycle
		PORTD = 0b11101111;
        OCR0A = 0xFF;
		}

		

		

		}

    }

}
